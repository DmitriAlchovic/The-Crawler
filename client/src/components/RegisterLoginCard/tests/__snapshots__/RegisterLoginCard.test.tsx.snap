// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterLoginCard should create empty component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="login-register-container"
      >
        <form>
          <label
            class="label"
            for="email"
          >
            Enter address
            <div
              class="input-container"
            >
              <img
                alt="envelope"
                src="mail.svg"
              />
              <input
                class="input"
                name="email"
                placeholder="johndoe@gmail.com"
                type="email"
                value=""
              />
            </div>
          </label>
          <label
            class="label"
            for="password"
          >
            Password
            <div
              class="input-container"
            >
              <img
                alt="key"
                src="key.svg"
              />
              <input
                class="input"
                minlength="8"
                name="password"
                placeholder="Maximum 8 characters"
                type="password"
                value=""
              />
            </div>
          </label>
        </form>
        <div
          class="input-error"
        >
          <div />
          <div />
        </div>
        <button
          class="login-register-btn"
          type="button"
        >
          Register Now
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="login-register-container"
    >
      <form>
        <label
          class="label"
          for="email"
        >
          Enter address
          <div
            class="input-container"
          >
            <img
              alt="envelope"
              src="mail.svg"
            />
            <input
              class="input"
              name="email"
              placeholder="johndoe@gmail.com"
              type="email"
              value=""
            />
          </div>
        </label>
        <label
          class="label"
          for="password"
        >
          Password
          <div
            class="input-container"
          >
            <img
              alt="key"
              src="key.svg"
            />
            <input
              class="input"
              minlength="8"
              name="password"
              placeholder="Maximum 8 characters"
              type="password"
              value=""
            />
          </div>
        </label>
      </form>
      <div
        class="input-error"
      >
        <div />
        <div />
      </div>
      <button
        class="login-register-btn"
        type="button"
      >
        Register Now
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Slide should create empty comment input 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="login-register-container"
      >
        <form>
          <label
            class="label"
            for="email"
          >
            Enter address
            <div
              class="input-container"
            >
              <img
                alt="envelope"
                src="mail.svg"
              />
              <input
                class="input"
                name="email"
                placeholder="johndoe@gmail.com"
                type="email"
                value=""
              />
            </div>
          </label>
          <label
            class="label"
            for="password"
          >
            Password
            <div
              class="input-container"
            >
              <img
                alt="key"
                src="key.svg"
              />
              <input
                class="input"
                minlength="8"
                name="password"
                placeholder="Maximum 8 characters"
                type="password"
                value=""
              />
            </div>
          </label>
        </form>
        <div
          class="input-error"
        >
          <div />
          <div />
        </div>
        <button
          class="login-register-btn"
          type="button"
        >
          Register Now
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="login-register-container"
    >
      <form>
        <label
          class="label"
          for="email"
        >
          Enter address
          <div
            class="input-container"
          >
            <img
              alt="envelope"
              src="mail.svg"
            />
            <input
              class="input"
              name="email"
              placeholder="johndoe@gmail.com"
              type="email"
              value=""
            />
          </div>
        </label>
        <label
          class="label"
          for="password"
        >
          Password
          <div
            class="input-container"
          >
            <img
              alt="key"
              src="key.svg"
            />
            <input
              class="input"
              minlength="8"
              name="password"
              placeholder="Maximum 8 characters"
              type="password"
              value=""
            />
          </div>
        </label>
      </form>
      <div
        class="input-error"
      >
        <div />
        <div />
      </div>
      <button
        class="login-register-btn"
        type="button"
      >
        Register Now
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Slide should create empty component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="login-register-container"
      >
        <form>
          <label
            class="label"
            for="email"
          >
            Enter address
            <div
              class="input-container"
            >
              <img
                alt="envelope"
                src="mail.svg"
              />
              <input
                class="input"
                name="email"
                placeholder="johndoe@gmail.com"
                type="email"
                value=""
              />
            </div>
          </label>
          <label
            class="label"
            for="password"
          >
            Password
            <div
              class="input-container"
            >
              <img
                alt="key"
                src="key.svg"
              />
              <input
                class="input"
                minlength="8"
                name="password"
                placeholder="Maximum 8 characters"
                type="password"
                value=""
              />
            </div>
          </label>
        </form>
        <div
          class="input-error"
        >
          <div />
          <div />
        </div>
        <button
          class="login-register-btn"
          type="button"
        >
          Register Now
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="login-register-container"
    >
      <form>
        <label
          class="label"
          for="email"
        >
          Enter address
          <div
            class="input-container"
          >
            <img
              alt="envelope"
              src="mail.svg"
            />
            <input
              class="input"
              name="email"
              placeholder="johndoe@gmail.com"
              type="email"
              value=""
            />
          </div>
        </label>
        <label
          class="label"
          for="password"
        >
          Password
          <div
            class="input-container"
          >
            <img
              alt="key"
              src="key.svg"
            />
            <input
              class="input"
              minlength="8"
              name="password"
              placeholder="Maximum 8 characters"
              type="password"
              value=""
            />
          </div>
        </label>
      </form>
      <div
        class="input-error"
      >
        <div />
        <div />
      </div>
      <button
        class="login-register-btn"
        type="button"
      >
        Register Now
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
